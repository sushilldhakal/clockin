{"version":3,"file":"static/js/499.39e4b47b.chunk.js","mappings":"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","sources":["views/Pin/Pin.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PinInput from \"react-pin-input\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport swal from \"sweetalert\";\r\n\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport \"react-simple-keyboard/build/css/index.css\";\r\nimport \"./Pin.css\";\r\n\r\nfunction doDate() {\r\n  var str = \"\";\r\n  var now = new Date();\r\n\r\n  str = now.toDateString() + \" \" + now.toLocaleTimeString();\r\n\r\n  var pinTime = moment(str).format(\"hh:mm:ss A\");\r\n  document.getElementById(\"todaysDate\").innerHTML = pinTime;\r\n}\r\nsetInterval(doDate, 1000);\r\n\r\nclass Pin extends Component {\r\n  state = {\r\n    input: \"\",\r\n    currentTime: moment().format(\"LT\"),\r\n    layoutName: \"default\",\r\n  };\r\n\r\n  onChange = (input) => {\r\n    this.setState({\r\n      input: input,\r\n    });\r\n  };\r\n\r\n  onKeyPress = (button) => {\r\n    console.log(\"Button pressed\", button);\r\n\r\n    if (button === \"{clear}\") {\r\n      this.handleClear();\r\n      return;\r\n    }\r\n\r\n    if (button === \"{bksp}\") {\r\n      if (this.pin.elements[3].state.value) {\r\n        this.pin.elements[3].state.value = \"\";\r\n        return;\r\n      }\r\n      if (this.pin.elements[2].state.value) {\r\n        this.pin.elements[2].state.value = \"\";\r\n        return;\r\n      }\r\n      if (this.pin.elements[1].state.value) {\r\n        this.pin.elements[1].state.value = \"\";\r\n        return;\r\n      }\r\n      if (this.pin.elements[0].state.value) {\r\n        this.pin.elements[0].state.value = \"\";\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.pin.elements[2].state.value) {\r\n      this.pin.elements[3].state.value = button;\r\n      setTimeout(this.onSubmitHandler, 10);\r\n      return;\r\n    }\r\n    if (this.pin.elements[1].state.value) {\r\n      this.pin.elements[2].state.value = button;\r\n      return;\r\n    }\r\n    if (this.pin.elements[0].state.value) {\r\n      this.pin.elements[1].state.value = button;\r\n      return;\r\n    }\r\n    this.pin.elements[0].state.value = button;\r\n  };\r\n\r\n  handleClear = () => {\r\n    this.setState(\r\n      {\r\n        input: \"\",\r\n      },\r\n      () => {\r\n        this.keyboard.clearInput();\r\n      }\r\n    );\r\n\r\n    this.pin.clear();\r\n  };\r\n\r\n  handleShift = () => {\r\n    let layoutName = this.state.layoutName;\r\n\r\n    this.setState({\r\n      layoutName: layoutName === \"default\" ? \"shift\" : \"default\",\r\n    });\r\n  };\r\n\r\n  onChangeInput = (event) => {\r\n    let input = event.target.value;\r\n    this.setState(\r\n      {\r\n        input: input,\r\n      },\r\n      () => {\r\n        this.keyboard.setInput(input);\r\n      }\r\n    );\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      input: \"\",\r\n    });\r\n  };\r\n\r\n  onSubmitHandler = (e) => {\r\n    this.pin.values = e;\r\n    axios\r\n      .post(process.env.REACT_APP_BASE_URL + \"auth/login\", {\r\n        pin: this.state.input,\r\n      })\r\n      .then((res) => {\r\n        window.localStorage.setItem(\"pin\", this.state.input);\r\n        this.props.history.push(\"/home\");\r\n      })\r\n      .catch((err) => {\r\n        swal(\r\n          \"Invalid PIN!\",\r\n          \"Pin you enter didn't match. Try again\",\r\n          \"error\"\r\n        ).then((value) => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Pin home-container\">\r\n        <div className=\"text white-text\">\r\n          <h2 id=\"todaysDate\"> </h2>\r\n        </div>\r\n        <PinInput\r\n          length={4}\r\n          focus\r\n          ref={(p) => (this.pin = p)}\r\n          type=\"numeric\"\r\n          inputMode=\"number\"\r\n          pattern=\"\\d*\"\r\n          value={this.state.input}\r\n          onChange={this.onChange.bind(this)}\r\n          onComplete={this.onSubmitHandler.bind(this)}\r\n        />\r\n        <Keyboard\r\n          keyboardRef={(r) => (this.keyboard = r)}\r\n          layoutName={this.state.layoutName}\r\n          theme={\r\n            \"hg-theme-default hg-theme-numeric hg-layout-numeric numeric-theme\"\r\n          }\r\n          layout={{\r\n            default: [\"1 2 3\", \"4 5 6\", \"7 8 9\", \"{clear} 0 {bksp}\"],\r\n          }}\r\n          mergeDisplay\r\n          display={{\r\n            \"{clear}\": \"Clear\",\r\n            \"{bksp}\": \"&#8592\",\r\n          }}\r\n          maxLength={4}\r\n          onChange={(input) => this.onChange(input)}\r\n          onKeyPress={(button) => this.onKeyPress(button)}\r\n          onComplete={this.onSubmitHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pin;\r\n"],"names":["setInterval","str","now","Date","toDateString","toLocaleTimeString","pinTime","moment","format","document","getElementById","innerHTML","Pin","state","input","currentTime","layoutName","onChange","setState","onKeyPress","button","console","log","pin","elements","value","setTimeout","onSubmitHandler","handleClear","keyboard","clearInput","clear","handleShift","onChangeInput","event","target","setInput","onClear","e","values","axios","process","then","res","window","localStorage","setItem","props","history","push","catch","err","swal","location","reload","className","id","length","focus","ref","p","type","inputMode","pattern","this","bind","onComplete","keyboardRef","r","theme","layout","default","mergeDisplay","display","maxLength","Component"],"sourceRoot":""}