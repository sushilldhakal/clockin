{"version":3,"file":"static/js/303.bc7bb664.chunk.js","mappings":"+RAUMA,EAAQC,EAAQ,MAChBC,EAASD,EAAQ,KACnBE,EAAOD,EAAOE,YAAY,IAETC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACnB,WAAYC,GAAQ,IAAD,yBACjB,cAAMA,IASRC,SAAW,SAACC,GAAD,OAAO,EAAKC,UAAL,UAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAVzC,EAYnBC,MAAQ,SAACL,GAEKN,EAAOY,SAAS,EAAKC,MAAMC,SAAUb,GAEjD,EAAKM,SAAS,CACZG,MAAO,YAGTZ,EACGiB,KAAKC,EAAAA,GAAa,mBAAoB,CACrCC,SAAU,EAAKJ,MAAMI,SACrBH,SAAU,EAAKD,MAAMC,WAEtBI,MAAK,SAACC,GACL,EAAKZ,SAAS,CACZG,MAAO,YAETU,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,OACvCH,aAAaC,QAAQ,UAAW,EAAKR,MAAMI,UACvCO,QAAQL,EAAIG,KAAKG,WACnBL,aAAaC,QAAQ,WAAYF,EAAIG,KAAKG,UAC5CC,YAAW,WACTC,OAAOF,SAASG,KAAO,eACtB,QAEJC,OAAM,SAACC,GACFA,EAAIC,UAAYD,EAAIC,SAAST,MAAQQ,EAAIC,SAAST,KAAKU,UACzD,EAAKzB,SAAS,CACZG,MAAO,UAETuB,GAAAA,CAAK,CACHC,KAAMJ,EAAIC,SAAST,KAAKU,QACxBG,KAAM,QACNC,KAAM,eA3Cd,EAAKvB,MAAQ,CACXI,SAAU,GACVH,SAAU,GACVuB,OAAQ,KACR3B,MAAO,QANQ,EA6HlB,OArHA,8BA2CD,WAAU,IAAD,OACP,OACE,4BACE,SAAC,IAAD,KACA,gBAAK4B,UAAU,eAAf,UACE,iBAAKA,UAAU,eAAf,WACE,iBAAKA,UAAU,UAAf,WACE,iBAAMA,UAAU,OAChB,iBAAMA,UAAU,SAChB,iBAAMA,UAAU,SAChB,iBAAMA,UAAU,UAGlB,iBAAMC,SAAUC,KAAK7B,MAAM8B,KAAKD,MAAhC,UACE,SAAC,IAAD,CAAMF,UAAU,yBAAhB,UACE,UAAC,SAAD,YACE,gBAAKA,UAAU,OAAf,UACE,cAAGA,UAAU,qCAEf,eAAIA,UAAU,OAAd,oBAEA,SAAC,IAAD,CACEI,GAAG,iBACHN,KAAK,OACLO,aAAa,MACblC,KAAK,WACLC,MAAO8B,KAAK3B,MAAMI,SAClBZ,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAEU,SAAUX,EAAEE,OAAOE,SAErCkC,YAAY,YACZC,UAAQ,KAEV,mBACA,mBACA,SAAC,IAAD,CACEH,GAAG,kBACHN,KAAK,WACLO,aAAa,MACblC,KAAK,WACLC,MAAO8B,KAAK3B,MAAMC,SAClBT,SAAU,SAACC,GAAD,OACR,EAAKC,SAAS,CAAEO,SAAUR,EAAEE,OAAOE,SAErCkC,YAAY,WACZC,UAAQ,KAEV,mBACA,mBAcA,SAAC,IAAD,CACEC,YAAaN,KAAK3B,MAAMH,MACxBqC,QAASP,KAAK7B,MAAM8B,KAAKD,MACzBQ,SAAU,6BAS3B,EA9HkB7C,CAAc8C,EAAAA","sources":["views/Login/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport { API_SERVER } from \"../../config/constant\";\r\nimport Breadcrumb from \"../../layouts/AdminLayout/Breadcrumb\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport ReactiveButton from \"reactive-button\";\r\n\r\nimport { Button, TextField, Link } from \"@material-ui/core\";\r\nconst axios = require(\"axios\");\r\nconst bcrypt = require(\"bcryptjs\");\r\nvar salt = bcrypt.genSaltSync(10);\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      submit: null,\r\n      value: \"idle\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  login = (e) => {\r\n    //e.preventDefault();\r\n    const pwd = bcrypt.hashSync(this.state.password, salt);\r\n\r\n    this.setState({\r\n      value: \"loading\",\r\n    });\r\n\r\n    axios\r\n      .post(API_SERVER + \"auth/admin/login\", {\r\n        username: this.state.username,\r\n        password: this.state.password,\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          value: \"success\",\r\n        });\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        localStorage.setItem(\"user_id\", this.state.username);\r\n        if (Boolean(res.data.location))\r\n          localStorage.setItem(\"location\", res.data.location);\r\n        setTimeout(() => {\r\n          window.location.href = \"/dashboard\";\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response && err.response.data && err.response.data.message) {\r\n          this.setState({\r\n            value: \"error\",\r\n          });\r\n          swal({\r\n            text: err.response.data.message,\r\n            icon: \"error\",\r\n            type: \"error\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumb />\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-content\">\r\n            <div className=\"auth-bg\">\r\n              <span className=\"r\" />\r\n              <span className=\"r s\" />\r\n              <span className=\"r s\" />\r\n              <span className=\"r\" />\r\n            </div>\r\n\r\n            <form onSubmit={this.login.bind(this)}>\r\n              <Card className=\"borderless text-center\">\r\n                <Card.Body>\r\n                  <div className=\"mb-4\">\r\n                    <i className=\"feather icon-unlock auth-icon\"></i>\r\n                  </div>\r\n                  <h3 className=\"mb-4\">Login</h3>\r\n\r\n                  <TextField\r\n                    id=\"standard-basic\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={(e) =>\r\n                      this.setState({ username: e.target.value })\r\n                    }\r\n                    placeholder=\"User Name\"\r\n                    required\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  <TextField\r\n                    id=\"standard-basic1\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={(e) =>\r\n                      this.setState({ password: e.target.value })\r\n                    }\r\n                    placeholder=\"Password\"\r\n                    required\r\n                  />\r\n                  <br />\r\n                  <br />\r\n                  {/* <Button\r\n                    className=\"button_style\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    type=\"submit\"\r\n                    disabled={\r\n                      this.state.username == \"\" && this.state.password == \"\"\r\n                    }\r\n                    onClick={this.login.bind(this)}\r\n                  >\r\n                    Login\r\n                  </Button> */}\r\n                  <ReactiveButton\r\n                    buttonState={this.state.value}\r\n                    onClick={this.login.bind(this)}\r\n                    idleText={\"Login\"}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"names":["axios","require","bcrypt","salt","genSaltSync","Login","props","onChange","e","setState","target","name","value","login","hashSync","state","password","post","API_SERVER","username","then","res","localStorage","setItem","data","token","Boolean","location","setTimeout","window","href","catch","err","response","message","swal","text","icon","type","submit","className","onSubmit","this","bind","id","autoComplete","placeholder","required","buttonState","onClick","idleText","React"],"sourceRoot":""}