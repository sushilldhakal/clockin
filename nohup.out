
> timesheet-mern@1.0.0 client /var/www/clockin
> cd client && npm run start


> selfie@0.1.0 start /var/www/clockin/client
> react-scripts start

Starting the development server...

Compiled with warnings.

Module not found: Error: Can't resolve 'crypto' in '/var/www/clockin/client/node_modules/bcryptjs/dist'
BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
	- install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "crypto": false }

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

assets by path static/media/ 3.39 MiB
  assets by path static/media/*.ttf 561 KiB 7 assets
  assets by path static/media/*.woff 309 KiB 7 assets
  assets by path static/media/*.svg 1.88 MiB 6 assets
  assets by path static/media/*.eot 447 KiB 6 assets
  assets by path static/media/*.woff2 231 KiB 5 assets
assets by path static/js/*.js 6.93 MiB
  assets by chunk 1.55 MiB (id hint: vendors) 10 assets
  10 assets
asset asset-manifest.json 9.66 KiB [emitted]
asset index.html 1.67 KiB [emitted]
cached modules 7.34 MiB (javascript) 3.39 MiB (asset) 31.5 KiB (runtime) [cached] 1447 modules

WARNING in ./node_modules/bcryptjs/dist/bcrypt.js 68:13-45
Module not found: Error: Can't resolve 'crypto' in '/var/www/clockin/client/node_modules/bcryptjs/dist'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
	- install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "crypto": false }
 @ ./src/views/Login/Login.js 16:15-34
 @ ./src/Routes.js 76:37-66
 @ ./src/App.js 6:0-48 14:16-28 14:29-35
 @ ./src/index.js 13:0-24 22:37-40

1 warning has detailed information that is not shown.
Use 'stats.errorDetails: true' resp. '--stats-error-details' to show it.

webpack 5.65.0 compiled with 1 warning in 5181 ms
Compiling...
Compiled with warnings.

Module not found: Error: Can't resolve 'crypto' in '/var/www/clockin/client/node_modules/bcryptjs/dist'
BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
	- install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "crypto": false }

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

assets by status 5.22 MiB [cached] 50 assets
assets by status 5.12 MiB [emitted]
  assets by chunk 5.1 MiB (name: main)
    asset static/js/bundle.js 5.1 MiB [emitted] (name: main) 1 related asset
    asset main.2bfb0e87ec66755357ef.hot-update.js 357 bytes [emitted] [immutable] [hmr] (name: main) 1 related asset
  assets by path *.json 9.81 KiB
    asset asset-manifest.json 9.78 KiB [emitted]
    asset main.2bfb0e87ec66755357ef.hot-update.json 28 bytes [emitted] [immutable] [hmr]
  asset index.html 1.67 KiB [emitted]
Entrypoint main 5.1 MiB (8.55 MiB) = static/js/bundle.js 5.1 MiB main.2bfb0e87ec66755357ef.hot-update.js 357 bytes 33 auxiliary assets
cached modules 7.34 MiB (javascript) 3.39 MiB (asset) [cached] 1431 modules
runtime modules 31.5 KiB 16 modules

WARNING in ./node_modules/bcryptjs/dist/bcrypt.js 68:13-45
Module not found: Error: Can't resolve 'crypto' in '/var/www/clockin/client/node_modules/bcryptjs/dist'

BREAKING CHANGE: webpack < 5 used to include polyfills for node.js core modules by default.
This is no longer the case. Verify if you need this module and configure a polyfill for it.

If you want to include a polyfill, you need to:
	- add a fallback 'resolve.fallback: { "crypto": require.resolve("crypto-browserify") }'
	- install 'crypto-browserify'
If you don't want to include a polyfill, you can use an empty module like this:
	resolve.fallback: { "crypto": false }
 @ ./src/views/Login/Login.js 16:15-34
 @ ./src/Routes.js 76:37-66
 @ ./src/App.js 6:0-48 14:16-28 14:29-35
 @ ./src/index.js 13:0-24 22:37-40

1 warning has detailed information that is not shown.
Use 'stats.errorDetails: true' resp. '--stats-error-details' to show it.

webpack 5.65.0 compiled with 1 warning in 1348 ms

> timesheet-mern@1.0.0 start /var/www/clockin
> node src/server.js

{"level":50,"time":1640870445080,"pid":4686,"hostname":"timesheet","code":"EADDRINUSE","errno":-98,"syscall":"listen","address":"127.0.0.1","port":4000,"stack":"Error: listen EADDRINUSE: address already in use 127.0.0.1:4000\n    at Server.setupListenHandle [as _listen2] (net.js:1331:16)\n    at listenInCluster (net.js:1379:12)\n    at GetAddrInfoReqWrap.doListen [as callback] (net.js:1516:7)\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:73:8)","type":"Error","msg":"listen EADDRINUSE: address already in use 127.0.0.1:4000"}
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! timesheet-mern@1.0.0 start: `node src/server.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the timesheet-mern@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/sushill/.npm/_logs/2021-12-30T13_20_45_101Z-debug.log
{"level":50,"time":1640870621414,"pid":4859,"hostname":"timesheet","code":"EADDRINUSE","errno":-98,"syscall":"listen","address":"0.0.0.0","port":4000,"stack":"Error: listen EADDRINUSE: address already in use 0.0.0.0:4000\n    at Server.setupListenHandle [as _listen2] (net.js:1331:16)\n    at listenInCluster (net.js:1379:12)\n    at doListen (net.js:1516:7)\n    at processTicksAndRejections (internal/process/task_queues.js:83:21)","type":"Error","msg":"listen EADDRINUSE: address already in use 0.0.0.0:4000"}
Killed
npm ERR! code ELIFECYCLE
npm ERR! errno 137
npm ERR! timesheet-mern@1.0.0 client: `cd client && npm run start`
npm ERR! Exit status 137
npm ERR! 
npm ERR! Failed at the timesheet-mern@1.0.0 client script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/sushill/.npm/_logs/2021-12-31T05_39_32_245Z-debug.log
The build failed because the process exited too early. This probably means the system ran out of memory or someone called `kill -9` on the process.
